package SerialVersionDefault;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Field;

/**
 * вывод:
 * if serialVersionUID does not exists, then serialVersion is autogenerated;
 * stream classdesc serialVersionUID = 5664584241543243196, local class serialVersionUID = 1
 */

public class PersistManager {
	public static void main(String[] args){
		// PersistObject value=createObject(); saveObject(value);
		PersistObject savedValue=(PersistObject)readObject();
		System.out.println(savedValue);
		printAllFields(savedValue);
	}
	
	
	private static void printAllFields(Object savedValue) {
		Field[] fields=savedValue.getClass().getDeclaredFields();
		for(Field each:fields){
			each.setAccessible(true);
			try {
				System.out.println(each.getName()+" : "+each.get(savedValue));
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			}
		}
	}


	private static PersistObject createObject(){
		return new PersistObject(10,"User");
	}
	
	private static String pathToFile="c:\\persist_object.bin";
	private static void saveObject(PersistObject value){
		try {
			ObjectOutputStream os=new ObjectOutputStream(new FileOutputStream(pathToFile));
			os.writeObject(value);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private static Object readObject(){
		try {
			ObjectInputStream input=new ObjectInputStream(new FileInputStream(pathToFile));
			try {
				return input.readObject();
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} 
		return null;
	}
	
}
