/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Assert;
import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.IOException;

public class XmlValidatorTest {
    private final static String FILE_ERROR_TASK_BPMN = "/direct-run-error-task.bpmn";
    private final static String FILE_ERROR_PROCESS_BPMN = "/direct-run-error-process.bpmn";
    private final static String FILE_BPMN = "/direct-run.bpmn";

    @Test
    public void readingWithoutValidation() throws IOException, SAXException, ParserConfigurationException {
        // given
        File file= new File(Thread.currentThread().getClass().getResource(FILE_ERROR_TASK_BPMN).getFile());

        // when
        Document document = new XmlValidator().read(file);

        // then
        Assert.assertNotNull(document);
    }


    @Test
    public void readAllUserTasks() throws IOException, SAXException, ParserConfigurationException {
        // given
        File file= new File(Thread.currentThread().getClass().getResource(FILE_ERROR_TASK_BPMN).getFile());

        // when
        NodeList nodeList = XmlValidator.getNodeList(XmlValidator.read(file), "//userTask");

        // then
        Assert.assertEquals(2, nodeList.getLength());
    }

    @Test(expected=XmlValidatorException.class)
    public void validateAllUserTasksWithoutExtension() throws IOException, SAXException, ParserConfigurationException {
        // given
        File file= new File(Thread.currentThread().getClass().getResource(FILE_ERROR_TASK_BPMN).getFile());

        // when
        NodeList nodeList = XmlValidator.getNodeList(XmlValidator.read(file), "//userTask");

        // then
        for(int index=0; index<nodeList.getLength();index++){
            Node node = nodeList.item(index);
            XmlValidator.validateUserTask((Element)node);
        }
        Assert.assertTrue(true); // no exception
    }

    @Test
    public void validateAllUserTasks() throws IOException, SAXException, ParserConfigurationException {
        // given
        File file= new File(Thread.currentThread().getClass().getResource(FILE_BPMN).getFile());
        Document document = XmlValidator.read(file);

        // when
        NodeList nodeList = XmlValidator.readAllUserTasks(document);

        // then
        for(int index=0; index<nodeList.getLength();index++){
            Node node = nodeList.item(index);
            XmlValidator.validateUserTask((Element)node);
        }
        Assert.assertTrue(true); // no exception
    }

    @Test(expected = XmlValidatorException.class)
    public void validateUserProcessWithError() throws IOException, SAXException, ParserConfigurationException {
        // given
        File file= new File(Thread.currentThread().getClass().getResource(FILE_ERROR_PROCESS_BPMN).getFile());
        Document document = XmlValidator.read(file);

        // when
        Node processNode = XmlValidator.readProcess(document);

        // then
        XmlValidator.validateProcess((Element)processNode);
        Assert.assertTrue(true); // no exception
    }

    @Test
    public void validateUserProcess() throws IOException, SAXException, ParserConfigurationException {
        // given
        File file= new File(Thread.currentThread().getClass().getResource(FILE_BPMN).getFile());
        Document document = XmlValidator.read(file);

        // when
        Node processNode = XmlValidator.readProcess(document);

        // then
        XmlValidator.validateProcess((Element)processNode);
        Assert.assertTrue(true); // no exception
    }

}
